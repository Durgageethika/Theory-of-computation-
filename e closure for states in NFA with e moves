#include<stdio.h>
#include<string.h>
int trans_table[10][5][3];
char symbol[5],a;
int e-closure[10][10],ptr,state;
void find-e-closure(int x);
int main()
{
	int i,j,k,n,num_states,num_symbols;
	for(i=0;i<10;i++)
	{
		for(j=0;j<5;j++)
		{
			for(k=0;k<3;k++)
			{
				trans_table[i][j][k]=-1;
			}
		}
	}
	num_states=3;
	num_symbols=2;
	symbol[10]='e';
	n=1;
	trans_table[0][0][0]=1;
	for(i=0;i<10;i++)
	{
		for(j=0;j<10;j++)
		{
			e-closure[i][j]=-1;
		}
	}
	for(i=0;i<num_states;i++)
	e-closure[i][0]=i;
	for(i=0;i<num_states;i++)
	{
		if(trans_table[i][0][0]==-1)
		continue;
		else
		{
			state=i;
			ptr=1;
			find-e-closure(i);
		}
	}
	for(i=0;i<num_states;i++)
	{
		printf("e-closure(%d)={",i);
		for(j=0;j<num_states;j++)
		{
			if(e-closure[i][j]!=-1)
			{
				printf("%d",e-closure[i][j]);
			}
		}
		printf("}\n");
	}
	}
	void find-e-closure(int x)
	{
		int i,j,y[10],num_trans;
		i=0;
		while (trans_table[x][0][i]!=-1)
		{
			y[i]=trans_table[x][0][i];
			i=i+1;
		}
		num_trans=i;
		for (j=0;j<num_trans;j++)
		{
			e-closure[state][ptr]y=[j];
			ptr++;
			find e-closure(y[i]);
		}
	}
